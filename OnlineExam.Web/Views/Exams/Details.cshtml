@model ExamViewModel

@inject IAuthorizationService AuthorizationService

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Exam Details";
}

<h2 class="text-center mt-3">@Model.SubjectName - Exam Details</h2>

<div class="mb-4">
    <p><strong>Description:</strong> @Model.Description</p>
    <p><strong>Level:</strong> @Model.Level</p>
    <p><strong>Total Grade:</strong> @Model.TotalGrade</p>
    <p><strong>Duration:</strong> @Model.Duration</p>
    <p><strong>Status:</strong> @(Model.Status ? "Active" : "Inactive")</p>

    @if ((await AuthorizationService.AuthorizeAsync(User, "AdminOnly")).Succeeded)
    {
        <a href="@Url.Action("EditExamForm", "Exams", new { examId = Model.Id })" class="btn btn-warning">Edit Exam</a>
        <form asp-controller="Exams" asp-action="Delete" asp-route-examId="@Model.Id" method="post" style="display:inline;">
            @Html.AntiForgeryToken()
            <button type="submit" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure you want to delete this exam?');">Delete</button>
        </form>
    }
</div>

<h4>Choose Questions</h4>
<table class="table table-bordered">
    <thead>
        <tr>
            <th>Title</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @if (Model.ChooseQuestions is not null){
            @foreach (var question in Model.ChooseQuestions)
            {
                <tr>
                    <td>@question.Title</td>
                    <td>
                        @if ((await AuthorizationService.AuthorizeAsync(User, "AdminOnly")).Succeeded)
                        {
                            <a href="@Url.Action("EditChooseQuestion", "Exams", new { examId = Model.Id, questionId = question.Id })" class="btn btn-primary btn-sm">Edit</a>
                            <form asp-controller="Exams" asp-action="DeleteChooseQuestion" asp-route-examId="@Model.Id" asp-route-questionId="@question.Id" method="post" style="display:inline;">
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure you want to delete this question?');">Delete</button>
                            </form>
                        }
                    </td>
                </tr>
            }
        }
        
    </tbody>
</table>

@if ((await AuthorizationService.AuthorizeAsync(User, "AdminOnly")).Succeeded)
{
    <a href="@Url.Action("CreateChooseQuestion", "Exams", new { examId = Model.Id })" class="btn btn-success">Add Choose Question</a>
}

<h4>True/False Questions</h4>
<table class="table table-bordered">
    <thead>
        <tr>
            <th>Title</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @if(Model.TrueOrFalseQuestions is not null){
            @foreach (var question in Model.TrueOrFalseQuestions)
            {
                <tr>
                    <td>@question.Title</td>
                    <td>
                        @if ((await AuthorizationService.AuthorizeAsync(User, "AdminOnly")).Succeeded)
                        {
                            <a href="@Url.Action("EditTrueFalseQuestion", "Exams", new { examId = Model.Id, questionId = question.Id })" class="btn btn-primary btn-sm">Edit</a>
                            <form asp-controller="Exams" asp-action="DeleteTrueFalseQuestion" asp-route-examId="@Model.Id" asp-route-questionId="@question.Id" method="post" style="display:inline;">
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure you want to delete this question?');">Delete</button>
                            </form>
                        }
                    </td>
                </tr>
            }
        }
       
    </tbody>
</table>

@if ((await AuthorizationService.AuthorizeAsync(User, "AdminOnly")).Succeeded)
{
    <a href="@Url.Action("CreateTrueFalseQuestion", "Exams", new { examId = Model.Id })" class="btn btn-success">Add True/False Question</a>
}
